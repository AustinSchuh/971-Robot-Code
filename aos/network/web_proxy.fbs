namespace aos.web_proxy;

// SDP is Session Description Protocol. We only handle OFFER (starting a
// transaction) and ANSWER responding to an offer.
enum SdpType : byte {
  OFFER,
  ANSWER
}

// The SDP payload is an opaque string that describes what (media/data) we
// want to transmit.
table WebSocketSdp {
  type:SdpType;
  payload:string;
}

// ICE is way for different peers to learn how to connect to each other.
// Because we will only be running in a local network, we don't have to support
// advaced features.
table WebSocketIce {
  candidate:string;
  sdpMid:string;
  sdpMLineIndex:int;
}

union Payload {WebSocketSdp, WebSocketIce}

// We only send a single type of message on the websocket to simplify parsing.
table WebSocketMessage {
  payload:Payload;
}
